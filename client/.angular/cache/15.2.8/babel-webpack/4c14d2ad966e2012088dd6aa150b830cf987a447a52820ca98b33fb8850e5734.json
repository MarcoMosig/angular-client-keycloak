{"ast":null,"code":"import { filter, switchMap, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class AuthGuardWithForcedLogin {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    return this.authService.isDoneLoading$.pipe(filter(isDone => isDone), switchMap(_ => this.authService.isAuthenticated$), tap(isAuthenticated => isAuthenticated || this.authService.login(state.url)));\n  }\n}\nAuthGuardWithForcedLogin.ɵfac = function AuthGuardWithForcedLogin_Factory(t) {\n  return new (t || AuthGuardWithForcedLogin)(i0.ɵɵinject(i1.AuthService));\n};\nAuthGuardWithForcedLogin.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardWithForcedLogin,\n  factory: AuthGuardWithForcedLogin.ɵfac\n});","map":{"version":3,"mappings":"AAGA,SAASA,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;;;AAKvD,OAAM,MAAOC,wBAAwB;EAGjCC,YACYC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAEvB;EAEAC,WAAW,CACPC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACH,WAAW,CAACI,cAAc,CAACC,IAAI,CACvCV,MAAM,CAACW,MAAM,IAAIA,MAAM,CAAC,EACxBV,SAAS,CAACW,CAAC,IAAI,IAAI,CAACP,WAAW,CAACQ,gBAAgB,CAAC,EACjDX,GAAG,CAACY,eAAe,IAAIA,eAAe,IAAI,IAAI,CAACT,WAAW,CAACU,KAAK,CAACP,KAAK,CAACQ,GAAG,CAAC,CAAC,CAC/E;EACL;;AAjBSb,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;SAAxBA,wBAAwB;EAAAc,SAAxBd,wBAAwB;AAAA","names":["filter","switchMap","tap","AuthGuardWithForcedLogin","constructor","authService","canActivate","route","state","isDoneLoading$","pipe","isDone","_","isAuthenticated$","isAuthenticated","login","url","factory"],"sourceRoot":"","sources":["D:\\Projekte\\samples\\angular-client-keycloak\\client\\src\\app\\core\\auth-guard-with-forced-login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardWithForcedLogin implements CanActivate {\r\n\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n    ) {\r\n    }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot,\r\n    ): Observable<boolean> {\r\n        return this.authService.isDoneLoading$.pipe(\r\n            filter(isDone => isDone),\r\n            switchMap(_ => this.authService.isAuthenticated$),\r\n            tap(isAuthenticated => isAuthenticated || this.authService.login(state.url)),\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}