{"ast":null,"code":"import { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { AuthConfig, OAuthModule, OAuthModuleConfig, OAuthStorage } from 'angular-oauth2-oidc';\nimport { authAppInitializerFactory } from './auth-app-initializer.factory';\nimport { authConfig } from './auth-config';\nimport { AuthGuardWithForcedLogin } from './auth-guard-with-forced-login.service';\nimport { AuthGuard } from './auth-guard.service';\nimport { authModuleConfig } from './auth-module-config';\nimport { AuthService } from './auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-oauth2-oidc\";\nexport function storageFactory() {\n  return localStorage;\n}\nexport class CoreModule {\n  static forRoot() {\n    return {\n      ngModule: CoreModule,\n      providers: [{\n        provide: APP_INITIALIZER,\n        useFactory: authAppInitializerFactory,\n        deps: [AuthService],\n        multi: true\n      }, {\n        provide: AuthConfig,\n        useValue: authConfig\n      }, {\n        provide: OAuthModuleConfig,\n        useValue: authModuleConfig\n      }, {\n        provide: OAuthStorage,\n        useFactory: storageFactory\n      }]\n    };\n  }\n  constructor(parentModule) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n}\nCoreModule.ɵfac = function CoreModule_Factory(t) {\n  return new (t || CoreModule)(i0.ɵɵinject(CoreModule, 12));\n};\nCoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: CoreModule\n});\nCoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [AuthService, AuthGuard, AuthGuardWithForcedLogin],\n  imports: [HttpClientModule, OAuthModule.forRoot()]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CoreModule, {\n    imports: [HttpClientModule, i1.OAuthModule]\n  });\n})();","map":{"version":3,"mappings":"AAAA,SAASA,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,eAAe,QAA2D,eAAe;AAClG,SAASC,UAAU,EAAEC,WAAW,EAAEC,iBAAiB,EAAEC,YAAY,QAAQ,qBAAqB;AAC9F,SAASC,yBAAyB,QAAQ,gCAAgC;AAC1E,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,wBAAwB,QAAQ,wCAAwC;AACjF,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,WAAW,QAAQ,gBAAgB;;;AAG5C,OAAM,SAAUC,cAAc;EAC5B,OAAOC,YAAY;AACrB;AAiBA,OAAM,MAAOC,UAAU;EACrB,OAAOC,OAAO;IACZ,OAAO;MACLC,QAAQ,EAAEF,UAAU;MACpBG,SAAS,EAAE,CACT;QAAEC,OAAO,EAAEjB,eAAe;QAAEkB,UAAU,EAAEb,yBAAyB;QAAEc,IAAI,EAAE,CAACT,WAAW,CAAC;QAAEU,KAAK,EAAE;MAAI,CAAE,EACrG;QAAEH,OAAO,EAAEhB,UAAU;QAAEoB,QAAQ,EAAEf;MAAU,CAAE,EAC7C;QAAEW,OAAO,EAAEd,iBAAiB;QAAEkB,QAAQ,EAAEZ;MAAgB,CAAE,EAC1D;QAAEQ,OAAO,EAAEb,YAAY;QAAEc,UAAU,EAAEP;MAAc,CAAE;KAExD;EACH;EAEAW,YAAoCC,YAAwB;IAC1D,IAAIA,YAAY,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;;EAEpF;;AAjBWX,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;QAAVA;AAAU;AAAVA,UAAU;aAPV,CACTH,WAAW,EACXF,SAAS,EACTD,wBAAwB,CACzB;EAAAkB,UAPC1B,gBAAgB,EAChBG,WAAW,CAACY,OAAO,EAAE;AAAA;;2EASZD,UAAU;IAAAY,UAVnB1B,gBAAgB;EAAA;AAAA","names":["HttpClientModule","APP_INITIALIZER","AuthConfig","OAuthModule","OAuthModuleConfig","OAuthStorage","authAppInitializerFactory","authConfig","AuthGuardWithForcedLogin","AuthGuard","authModuleConfig","AuthService","storageFactory","localStorage","CoreModule","forRoot","ngModule","providers","provide","useFactory","deps","multi","useValue","constructor","parentModule","Error","imports"],"sourceRoot":"","sources":["D:\\Projekte\\samples\\angular-client-keycloak\\client\\src\\app\\core\\core.module.ts"],"sourcesContent":["import { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { AuthConfig, OAuthModule, OAuthModuleConfig, OAuthStorage } from 'angular-oauth2-oidc';\nimport { authAppInitializerFactory } from './auth-app-initializer.factory';\nimport { authConfig } from './auth-config';\nimport { AuthGuardWithForcedLogin } from './auth-guard-with-forced-login.service';\nimport { AuthGuard } from './auth-guard.service';\nimport { authModuleConfig } from './auth-module-config';\nimport { AuthService } from './auth.service';\n\n\nexport function storageFactory(): OAuthStorage {\n  return localStorage;\n}\n\n\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    OAuthModule.forRoot(),\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    AuthGuardWithForcedLogin,\n  ],\n\n})\nexport class CoreModule {\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        { provide: APP_INITIALIZER, useFactory: authAppInitializerFactory, deps: [AuthService], multi: true },\n        { provide: AuthConfig, useValue: authConfig },\n        { provide: OAuthModuleConfig, useValue: authModuleConfig },\n        { provide: OAuthStorage, useFactory: storageFactory },\n      ]\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}