{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./core/auth.service\";\nexport class AppComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.isAuthenticated$ = this.authService.isAuthenticated$;\n    this.isDoneLoading$ = this.authService.isDoneLoading$;\n    this.canActivateProtectedRoutes$ = this.authService.canActivateProtectedRoutes$;\n  }\n  login() {\n    this.authService.login();\n  }\n  logout() {\n    this.authService.logout();\n  }\n  refresh() {\n    this.authService.refresh();\n  }\n  reload() {\n    window.location.reload();\n  }\n  clearStorage() {\n    localStorage.clear();\n  }\n  logoutExternally() {\n    window.open(this.authService.logoutUrl);\n  }\n  get hasValidToken() {\n    return this.authService.hasValidToken();\n  }\n  get accessToken() {\n    return this.authService.accessToken;\n  }\n  get refreshToken() {\n    return this.authService.refreshToken;\n  }\n  get identityClaims() {\n    return this.authService.identityClaims;\n  }\n  get idToken() {\n    return this.authService.idToken;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 0,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLDRKQUE0SiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,YAAY;EAKvBC,YACUC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAEnB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,WAAW,CAACC,gBAAgB;IACzD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACF,WAAW,CAACE,cAAc;IACrD,IAAI,CAACC,2BAA2B,GAAG,IAAI,CAACH,WAAW,CAACG,2BAA2B;EACjF;EAEAC,KAAK;IAAK,IAAI,CAACJ,WAAW,CAACI,KAAK,EAAE;EAAE;EACpCC,MAAM;IAAK,IAAI,CAACL,WAAW,CAACK,MAAM,EAAE;EAAE;EACtCC,OAAO;IAAK,IAAI,CAACN,WAAW,CAACM,OAAO,EAAE;EAAE;EACxCC,MAAM;IAAKC,MAAM,CAACC,QAAQ,CAACF,MAAM,EAAE;EAAE;EACrCG,YAAY;IAAKC,YAAY,CAACC,KAAK,EAAE;EAAE;EAEvCC,gBAAgB;IACdL,MAAM,CAACM,IAAI,CAAC,IAAI,CAACd,WAAW,CAACe,SAAS,CAAC;EACzC;EAEA,IAAIC,aAAa;IAAK,OAAO,IAAI,CAAChB,WAAW,CAACgB,aAAa,EAAE;EAAE;EAC/D,IAAIC,WAAW;IAAK,OAAO,IAAI,CAACjB,WAAW,CAACiB,WAAW;EAAE;EACzD,IAAIC,YAAY;IAAK,OAAO,IAAI,CAAClB,WAAW,CAACkB,YAAY;EAAE;EAC3D,IAAIC,cAAc;IAAK,OAAO,IAAI,CAACnB,WAAW,CAACmB,cAAc;EAAE;EAC/D,IAAIC,OAAO;IAAK,OAAO,IAAI,CAACpB,WAAW,CAACoB,OAAO;EAAE;;AA3BtCtB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["AppComponent","constructor","authService","isAuthenticated$","isDoneLoading$","canActivateProtectedRoutes$","login","logout","refresh","reload","window","location","clearStorage","localStorage","clear","logoutExternally","open","logoutUrl","hasValidToken","accessToken","refreshToken","identityClaims","idToken","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["D:\\Projekte\\samples\\angular-client-keycloak\\client\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './core/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isAuthenticated$: Observable<boolean>;\n  isDoneLoading$: Observable<boolean>;\n  canActivateProtectedRoutes$: Observable<boolean>;\n\n  constructor(\n    private authService: AuthService,\n  ) {\n    this.isAuthenticated$ = this.authService.isAuthenticated$;\n    this.isDoneLoading$ = this.authService.isDoneLoading$;\n    this.canActivateProtectedRoutes$ = this.authService.canActivateProtectedRoutes$;\n  }\n\n  login() { this.authService.login(); }\n  logout() { this.authService.logout(); }\n  refresh() { this.authService.refresh(); }\n  reload() { window.location.reload(); }\n  clearStorage() { localStorage.clear(); }\n\n  logoutExternally() {\n    window.open(this.authService.logoutUrl);\n  }\n\n  get hasValidToken() { return this.authService.hasValidToken(); }\n  get accessToken() { return this.authService.accessToken; }\n  get refreshToken() { return this.authService.refreshToken; }\n  get identityClaims() { return this.authService.identityClaims; }\n  get idToken() { return this.authService.idToken; }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}