{"ast":null,"code":"import { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { AuthConfig, OAuthModule, OAuthModuleConfig, OAuthStorage } from 'angular-oauth2-oidc';\nimport { authAppInitializerFactory } from './auth-app-initializer.factory';\nimport { authConfig } from './auth-config';\nimport { AuthGuardWithForcedLogin } from './auth-guard-with-forced-login.service';\nimport { AuthGuard } from './auth-guard.service';\nimport { authModuleConfig } from './auth-module-config';\nimport { AuthService } from './auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-oauth2-oidc\";\nexport function storageFactory() {\n  return localStorage;\n}\nexport let CoreModule = /*#__PURE__*/(() => {\n  class CoreModule {\n    static forRoot() {\n      return {\n        ngModule: CoreModule,\n        providers: [{\n          provide: APP_INITIALIZER,\n          useFactory: authAppInitializerFactory,\n          deps: [AuthService],\n          multi: true\n        }, {\n          provide: AuthConfig,\n          useValue: authConfig\n        }, {\n          provide: OAuthModuleConfig,\n          useValue: authModuleConfig\n        }, {\n          provide: OAuthStorage,\n          useFactory: storageFactory\n        }]\n      };\n    }\n    constructor(parentModule) {\n      if (parentModule) {\n        throw new Error('CoreModule is already loaded. Import it in the AppModule only');\n      }\n    }\n  }\n  CoreModule.ɵfac = function CoreModule_Factory(t) {\n    return new (t || CoreModule)(i0.ɵɵinject(CoreModule, 12));\n  };\n  CoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: CoreModule\n  });\n  CoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [AuthService, AuthGuard, AuthGuardWithForcedLogin],\n    imports: [HttpClientModule, OAuthModule.forRoot()]\n  });\n  return CoreModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}